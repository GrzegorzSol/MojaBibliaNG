#include <vcl.h>
#pragma hdrstop

#include "uMain.h"
#include <System.IOUtils.hpp>
#define _DEBUGINFO_  //U¿ywanie okna konsoli do debugowania aplikacji
#if defined(_DEBUGINFO_)
	#include "GsDebugClass.h"
#endif

//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TWindowMainTest *WindowMainTest;
const UnicodeString custrWinUpd = "winmbupd.exe";
/*
#if defined(_DEBUGINFO_)
	GsDebugClass::WriteDebug(Format("", ARRAYOFCONST(( ))));
	GsDebugClass::WriteDebug("");
#endif
MessageBox(NULL, TEXT("Test"), TEXT("Informacje aplikacji"), MB_OK | MB_ICONINFORMATION | MB_TASKMODAL);
*/

//---------------------------------------------------------------------------
__fastcall TWindowMainTest::TWindowMainTest(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TWindowMainTest::ButtUpdClick(TObject *Sender)
{
	if(TFile::Exists(custrWinUpd))
	//Jesli istnieje aplikacja do kopiowania nowej wersji na star¹
	{
		this->Close();
		if(this->ComponentState.Contains(csDestroying))
		{
      #if defined(_DEBUGINFO_)
				GsDebugClass::WriteDebug("csDestroyingHandle");
			#endif
			MessageBox(NULL, TEXT("csDestroyingHandle"), TEXT("Informacje aplikacji"), MB_OK | MB_ICONINFORMATION | MB_TASKMODAL);
    }


		ShellExecute(NULL, NULL , custrWinUpd.c_str(), NULL, NULL, SW_SHOWNORMAL);
	}

}
//---------------------------------------------------------------------------
void __fastcall TWindowMainTest::FormCreate(TObject *Sender)
{
  #if defined(_DEBUGINFO_) //Ewentualne tworzenie konsoli TMemo dla prywatnego debugera
		GsDebugClass::InitDebug();
	#endif
}
//---------------------------------------------------------------------------
void __fastcall TWindowMainTest::FormDestroy(TObject *Sender)
{
  #if defined(_DEBUGINFO_)
		GsDebugClass::WriteDebug("FormDestroy");
	#endif
	#if defined(_DEBUGINFO_) //Konsola debuggera
		//MessageBox(NULL, TEXT("Wstrzymanie zamykania aplikacji, w celu przegl¹du komunikatów konsoli!"), TEXT("Informacje aplikacji"), MB_OK | MB_ICONINFORMATION | MB_TASKMODAL);
		//GsDebugClass::CloseDebug();
	#endif
}
//---------------------------------------------------------------------------

